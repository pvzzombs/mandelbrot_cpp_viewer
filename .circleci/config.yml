version: 2.1

jobs:
  build:
    docker:
      - image: "debian:stretch"
    steps:
      - checkout
      - run:
          name: Installing SUDO
          command: 'apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*'
      - run:
          name: Installing GIT
          command: 'apt-get update && sudo apt-get install -y git'
      - run:
          name: Installing GCC
          command: 'apt-get update && apt-get install -y gcc g++'
      - run:
          name: Install CMAKE
          command: 'apt-get update && sudo apt-get install -y cmake'
      - run:d to specify that you want to use the non-interactive frontend:


          name: Install Xorg
          command: 'apt-get update; cat "1" | sudo apt-get install -y xorg'
#      - run:
#          name: Install Curl
#          command: 'apt-get update && sudo apt-get install -y curl'
#      - run:
#          name: Install Unzip
#          command: 'apt-get update && sudo apt-get install -y unzip'
#      - run:
#          name: Download Build Wrapper for SonarScanner
#          command: 'curl https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip --output build-wrapper-linux-x86.zip'
#      - run:
#          name: Unzip the Build Wrapper
#          command: 'unzip -o build-wrapper-linux-x86.zip -d build_wrapper_executable_folder'
      - run:
          name: Clone SFML Repo
          command: 'git clone https://github.com/SFML/SFML.git'
      - run:
          name: Configure and Build SFML Folder
          command: 'cd SFML &&  mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release && cmake --build . --config Release'
      - run:
          name: Build mandelbrot_cpp_viewer Folder
          command: 'mkdir build'
      - run:
          name: Configure and Build mandelbrot_cpp_viewer
          command: 'cd build && cmake .. -DSFML_DIR="SFML/build/" -DCMAKE_BUILD_TYPE=Release && cmake --build . --config Release'
#      - run:
#          name: Creating Binary Files and Executing Build Wrapper
#          command: './build_wrapper_executable_folder/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir build_wrapper_output_directory cmake --build build'
#      - sonarcloud/scan

#orbs:
#  sonarcloud: sonarsource/sonarcloud@1.0.1
#
#workflows:
#  main:
#    jobs:
#      - build:
#          context: SonarCloud
